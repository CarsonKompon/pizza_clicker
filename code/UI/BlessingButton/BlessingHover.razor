@using Sandbox;
@using Sandbox.UI;
@using Sandbox.UI.Construct;
@using Sandbox.Menu;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@attribute [StyleSheet]

@namespace PizzaClicker

<root>

    <div class="header">
        <img src=@Blessing.Icon class="icon" />
        <div class="info">
            <p class="name">@Blessing.Name</p>
        </div>
        <p class="price">@(CostString) heavenly crust</p>
    </div>
    <div class="body">
        <p>@Blessing.Description</p>
    </div>
    @if(HasRequirements())
    {
        <div class="requires">
            <p>Requires:</p>
            @foreach(var requirement in Blessing.Requires)
            {
                @if(!string.IsNullOrEmpty(requirement))
                {
                    <p>- @(Blessing.GetBlessing(requirement).Name)</p>
                }
            }
        </div>
    }

</root>

@code
{
    // Code References
    public Blessing Blessing { get; set; }
    public Player Player { get; set; }

    // string that returns Cost as string with commas
    string CostString => NumberHelper.ToStringAbbreviated(Blessing.Cost);

    public override void Tick()
    {
        Style.Top = Length.Pixels((Mouse.Position.y + 10f) * ScaleFromScreen);
        Style.Left = Length.Pixels((Mouse.Position.x + 10f) * ScaleFromScreen);
    }

    bool HasRequirements()
    {
        foreach(var requirement in Blessing.Requires)
        {
            if(!string.IsNullOrEmpty(requirement))
            {
                return true;
            }
        }
        return false;
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(CostString);
    }
}