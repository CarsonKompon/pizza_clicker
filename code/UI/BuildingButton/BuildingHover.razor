@using Sandbox.UI;
@using System;
@using Buildings;

@attribute [StyleSheet]

@namespace PizzaClicker

@if (Player == null || Building == null) {
    return;
}

<root>
    <div class="header">
        <img src="/ui/buildings/@(Building.Ident).png" class="icon" />

        <div class="info">
            <p class="name">@Building.Name</p>
            <p class="count">(Owned: @(BuildingCount.ToString()))</p>
        </div>

        <p class="price">@(CostString) pizzas</p>
    </div>

    <div class="body">
        <p>Each @(Building.Name) produces @(NumberHelper.ToStringAbbreviated(Building.GetIndividualPizzasPerSecond(Player))) pizzas/sec</p>

        @if (BuildingCount > 0) {
            <p>You have @(BuildingCount.ToString()) @(Building.Name)s producing @(TotalPPS) pizzas/sec (@(TotalPPSPercentage)% of your total PpS)</p>
        }
    </div>
</root>

@code
{
    public Building Building { get; set; }
    public Player Player { get; set; }
    public Panel ParentButton { get; set; }

    private Panel ProgressBar { get; set; }

    private ulong BuildingCount => Player.GetBuildingCount(Building.Ident);
    private double BuildingPPS => Building.GetPizzasPerSecond(Player, BuildingCount);
    private string CostString => NumberHelper.ToStringAbbreviated(Building.GetCost(Player, BuildingCount));

    private string PPS
    {
        get {
            var pps = BuildingPPS;
            if (pps < 1000) {
                return pps.ToString("F1").TrimEnd(new[] { '0', '.' });
            }

            return NumberHelper.ToStringAbbreviated(pps);
        }
    }

    private string TotalPPS => NumberHelper.ToStringAbbreviated(BuildingPPS);

    private string TotalPPSPercentage
    {
        get {
            var percentage = (BuildingPPS * 100) / Player.PizzasPerSecond;
            return percentage.ToString("F1");
        }
    }

    public override void Tick()
    {
        Style.Top = Length.Pixels(ParentButton.Box.Top * ScaleFromScreen);
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(BuildingCount, CostString);
    }
}
