@using Sandbox;
@using Sandbox.UI;
@using Sandbox.Menu;

@attribute [StyleSheet]

@namespace PizzaClicker

<root>
    <div class="backdrop" onclick=@Close></div>

    <div class="chatbox">
        <div @ref="ChatPanel" class="chat"></div>

        <TextEntry @ref="ChatTextEntry" CaretColor=@(Color.White) onsubmit=@Submit onblur=@Close Placeholder="Enter message..." AllowEmojiReplace=@(true)></TextEntry>
    </div>
</root>

@code
{
    private readonly int MAX_ENTRIES = 100;

    public ILobby Lobby { get; set; }

    private Panel ChatPanel { get; set; }
    private TextEntry ChatTextEntry { get; set; }

    private bool IsInitialized => ChatTextEntry != null;

    protected override void OnAfterTreeRender(bool firstTime)
    {
        base.OnAfterTreeRender(firstTime);

        if (firstTime) {
            Lobby.OnChatMessage += OnChatMessage;

            ChatTextEntry.PreferScrollToBottom = true;
        }
    }

    public override void Tick()
    {
        if (!IsInitialized) {
            return;
        }

        if ((Input.Pressed("chat") || ChatTextEntry.HasActive) && !HasClass("open")) {
            Open();
        } else if (!ChatTextEntry.HasFocus && HasClass("open")) {
            Close();
        }
    }

    public async void ScrollToLastMessage()
    {
        await GameTask.Delay(1); // dirty trick

        ChatPanel.TryScrollToBottom();
    }

    private void OnChatMessage(Friend friend, string message)
    {
        CreateChatEntry($"{friend.Name}:", message, "", friend.Id);
    }

    public void CreateChatEntry(string name, string message, string styles = "", long steamid = -1)
    {
        var entry = ChatPanel.AddChild<ChatEntry>();
        entry.SetMessage(name, message, steamid);
        entry.AddClass(styles);

        ChatPanel.SetChildIndex(entry, ChatPanel.ChildrenCount - 1);

        if (ChatPanel.ChildrenCount > MAX_ENTRIES) {
            ChatPanel.GetChild(0).Delete();
        }

        Audio.Play("ui.button.press");

        ScrollToLastMessage();
    }

    private void Open()
    {
        AddClass("open");
        ChatTextEntry.Focus();
        ScrollToLastMessage();
    }

    private void Close()
    {
        RemoveClass("open");
        ChatTextEntry.Blur();
    }

    private void Submit()
    {
        var message = ChatTextEntry.Text.Trim();
        if (string.IsNullOrWhiteSpace(message)) {
            return;
        }

        Lobby.SendChat(message);

        ChatTextEntry.Text = "";

        Close();
    }
}
