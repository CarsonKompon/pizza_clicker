@using Sandbox;
@using Sandbox.UI;
@using Sandbox.UI.Construct;
@using Sandbox.Menu;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@attribute [StyleSheet]

@namespace PizzaClicker

<root class="chatbox">

    <div @ref="ChatPanel" class="chat" PreferScrollToBottom=@(true)>
    </div>

    <TextEntry @ref="ChatTextEntry" CaretColor=@(Color.White) onsubmit=@SendChat onblur=@CloseChat Value:bind=@ChatText Placeholder="Enter message..." AllowEmojiReplace=@(true) ></TextEntry>

</root>

@code
{
    // Code References
    public ILobby Lobby { get; set; }

    // UI References
    Panel ChatPanel { get; set; }
    TextEntry ChatTextEntry { get; set; }
    string ChatText { get; set; }

    protected override void OnAfterTreeRender(bool firstTime)
    {
        base.OnAfterTreeRender(firstTime);

        if(firstTime)
        {
            Lobby.OnChatMessage += OnChatMessage;
        }
    }

    public override void Tick()
    {
        if(Input.Pressed("chat"))
        {
            ShowChat();
        }
    }

    void OnChatMessage(Friend friend, string message)
    {
        CreateChatEntry(friend.Name + ":", message, "", friend.Id);
    }

    public void CreateChatEntry(string name, string message, string styles = "", long steamid = -1)
    {
        var entry = ChatPanel.AddChild<ChatEntry>();
        ChatPanel.SetChildIndex(entry, 0);
        entry.SetMessage(name, message, steamid);
        entry.AddClass(styles);

        if(ChatPanel.ChildrenCount > 200)
        {
            ChatPanel.GetChild(ChatPanel.ChildrenCount - 1).Delete();
        }

        Audio.Play("ui.button.press");
    }

    void ShowChat()
    {
        AddClass("show");
		ChatTextEntry.Focus();
    }

    void CloseChat()
    {
        RemoveClass("show");
		ChatTextEntry.Blur();
    }

    void SendChat()
    {
        Lobby.SendChat(ChatText);
        ChatTextEntry.Text = "";
        CloseChat();
    }
}